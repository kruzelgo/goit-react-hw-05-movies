{"version":3,"file":"static/js/48.87a968c2.chunk.js","mappings":"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","sources":["Api.js","webpack://react-homework-template/./src/MoviesList/MovieList.module.css?5ae2","MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/SearchForm/SearchForm.module.css?785d","SearchForm/SearchForm.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '432440a0f2101c7e5f5f1625881e4cc7';\nconst BASE_URL = 'https://api.themoviedb.org';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n\n// import axios from 'axios';\n\n// const API_KEY = '432440a0f2101c7e5f5f1625881e4cc7';\n// const BASE_URL = 'https://api.themoviedb.org';\n\n// export const getTrendingMovies = async () => {\n//   try {\n//     const response = await fetch(\n//       `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n//     );\n//     const data = await response.json();\n//     return data.results;\n//   } catch (error) {\n//     console.error('Error fetching trending movies:', error);\n//     throw error;\n//   }\n// };\n\n// export const searchMovies = async query => {\n//   try {\n//     const response = await fetch(\n//       `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n//     );\n//     const data = await response.json();\n//     return data.results;\n//   } catch (error) {\n//     console.error('Error searching movies:', error);\n//     throw error;\n//   }\n// };\n\n// export const getMovieDetails = async movieId => {\n//   try {\n//     const response = await fetch(\n//       `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n//     );\n//     const data = await response.json();\n//     return data;\n//   } catch (error) {\n//     console.error('Error fetching movie details:', error);\n//     throw error;\n//   }\n// };\n\n// export const getMovieCredits = async movieId => {\n//   try {\n//     const response = await fetch(\n//       `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n//     );\n//     const data = await response.json();\n//     return data.cast;\n//   } catch (error) {\n//     console.error('Error fetching movie credits:', error);\n//     throw error;\n//   }\n// };\n\n// export const getMovieReviews = async movieId => {\n//   try {\n//     const response = await fetch(\n//       `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n//     );\n//     const data = await response.json();\n//     return data.results;\n//   } catch (error) {\n//     console.error('Error fetching movie reviews:', error);\n//     throw error;\n//   }\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MovieList_moviesList__QH0TD\",\"movieItem\":\"MovieList_movieItem__vZLnU\",\"movieTitle\":\"MovieList_movieTitle__BilE6\",\"moviePoster\":\"MovieList_moviePoster__+y5rM\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul className={css.moviesList}>\n      {movies.map(movie => (\n        <li key={movie.id} className={css.movieItem}>\n          <Link to={`/movie/${movie.id}`}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n              className={css.moviePoster}\n            />\n          </Link>\n          <div>\n            <p className={css.movieTitle}>{movie.title}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__bp9RK\",\"searchInput\":\"SearchForm_searchInput__QuPSD\",\"searchButton\":\"SearchForm_searchButton__3wLA+\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './SearchForm.module.css';\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      notifyError('Please enter something');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  const notifyError = message => {\n    NotificationManager.error(message);\n  };\n\n  return (\n    <>\n      <NotificationContainer />\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n          placeholder=\"Search movies\"\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          className={css.searchInput}\n        />\n        <button type=\"submit\" className={css.searchButton}>\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { searchMovies } from '../../Api';\nimport MoviesList from '../../MoviesList/MoviesList';\nimport SearchForm from '../../SearchForm/SearchForm';\n\nconst Movies = ({ searchQuery, onSearch }) => {\n  const location = useLocation();\n  const [searchResults, setSearchResults] = useState([]);\n  const query =\n    new URLSearchParams(location.search).get('query') || searchQuery;\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        if (query) {\n          const results = await searchMovies(query);\n          setSearchResults(results);\n        }\n      } catch (error) {\n        console.error('Error searching movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, [query]);\n\n  const handleSearch = async value => {\n    onSearch(value);\n  };\n\n  return (\n    <div>\n      <h2>Search Movies</h2>\n      <SearchForm onSubmit={handleSearch} />\n      <MoviesList movies={searchResults} />\n    </div>\n  );\n};\n\nMovies.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default Movies;\n\n// import PropTypes from 'prop-types';\n// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import { searchMovies } from '../../Api';\n// import MoviesList from '../../MoviesList/MoviesList';\n// import SearchForm from '../../SearchForm/SearchForm';\n\n// const Movies = ({ searchQuery, onSearch }) => {\n//   const location = useLocation();\n//   const [searchResults, setSearchResults] = useState([]);\n//   const query =\n//     new URLSearchParams(location.search).get('query') || searchQuery;\n\n//   useEffect(() => {\n//     const fetchMovies = async () => {\n//       try {\n//         if (query) {\n//           const results = await searchMovies(query);\n//           setSearchResults(results);\n//         }\n//       } catch (error) {\n//         console.error('Error searching movies:', error);\n//       }\n//     };\n\n//     fetchMovies();\n//   }, [query]);\n\n//   const handleSearch = async value => {\n//     onSearch(value);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Search Movies</h2>\n//       <SearchForm onSubmit={handleSearch} />\n//       <MoviesList movies={searchResults} />\n//     </div>\n//   );\n// };\n\n// Movies.propTypes = {\n//   searchQuery: PropTypes.string.isRequired,\n//   onSearch: PropTypes.func.isRequired,\n// };\n\n// export default Movies;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","params","api_key","sent","abrupt","data","results","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","movies","_jsx","className","css","children","map","movie","_jsxs","Link","to","id","src","poster_path","alt","title","onSubmit","_useState","useState","_useState2","_slicedToArray","setQuery","notifyError","message","NotificationManager","_Fragment","NotificationContainer","e","preventDefault","placeholder","type","value","onChange","target","searchQuery","onSearch","location","useLocation","searchResults","setSearchResults","URLSearchParams","search","get","useEffect","fetchMovies","handleSearch","SearchForm","MoviesList"],"sourceRoot":""}