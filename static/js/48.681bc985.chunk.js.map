{"version":3,"file":"static/js/48.681bc985.chunk.js","mappings":"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","sources":["Api.js","webpack://react-homework-template/./src/MoviesList/MovieList.module.css?5ae2","MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/SearchForm/SearchForm.module.css?785d","SearchForm/SearchForm.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '432440a0f2101c7e5f5f1625881e4cc7';\nconst BASE_URL = 'https://api.themoviedb.org';\nconst AUTHORIZATION =\n  'eyJhbGciOiJIUzI1NiJ9eyJhdWQiOiI0MzI0NDBhMGYyMTAxYzdlNWY1ZjE2MjU4ODFlNGNjNyIsInN1YiI6IjY2M2ZhZmY1ODQ3ZmFlNTYzMjY3NGY5NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQUjQGmZCAZg5Ps9XNjTo8LpsmaEyasJxNnZ0C6CHBX1Q';\n\nconst options = {\n  method: 'GET',\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n  headers: {\n    accept: 'application/json',\n    Authorization: AUTHORIZATION,\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  options.url = `${BASE_URL}/3/trending/movie/day`;\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  options.url = `${BASE_URL}/3/search/movie`;\n  options.params.query = query;\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  options.url = `${BASE_URL}/3/movie/${movieId}`;\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  options.url = `${BASE_URL}/3/movie/${movieId}/credits`;\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  options.url = `${BASE_URL}/3/movie/${movieId}/reviews`;\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieTrailers = async movieId => {\n  options.url = `${BASE_URL}/3/movie/${movieId}/videos`;\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// import axios from 'axios';\n\n// const API_KEY = '432440a0f2101c7e5f5f1625881e4cc7';\n// const BASE_URL = 'https://api.themoviedb.org';\n// const AUTHORIZATION =\n//   'eyJhbGciOiJIUzI1NiJ9eyJhdWQiOiI0MzI0NDBhMGYyMTAxYzdlNWY1ZjE2MjU4ODFlNGNjNyIsInN1YiI6IjY2M2ZhZmY1ODQ3ZmFlNTYzMjY3NGY5NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQUjQGmZCAZg5Ps9XNjTo8LpsmaEyasJxNnZ0C6CHBX1Q';\n\n// const options = {\n//   method: 'GET',\n//   params: {\n//     api_key: API_KEY,\n//     language: 'en-US',\n//     include_adult: false,\n//   },\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: AUTHORIZATION,\n//   },\n// };\n\n// export const getTrendingMovies = async () => {\n//   try {\n//     const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n//       params: {\n//         api_key: API_KEY,\n//       },\n//     });\n//     return response.data.results;\n//   } catch (error) {\n//     console.error('Error fetching trending movies:', error);\n//     throw error;\n//   }\n// };\n\n// export const searchMovies = async query => {\n//   try {\n//     const response = await axios.get(`${BASE_URL}/search/movie`, {\n//       params: {\n//         api_key: API_KEY,\n//         query: query,\n//       },\n//     });\n//     return response.data.results;\n//   } catch (error) {\n//     console.error('Error searching movies:', error);\n//     throw error;\n//   }\n// };\n\n// export const getMovieDetails = async movieId => {\n//   try {\n//     const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n//       params: {\n//         api_key: API_KEY,\n//       },\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching movie details:', error);\n//     throw error;\n//   }\n// };\n\n// export const getMovieCredits = async movieId => {\n//   try {\n//     const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n//       params: {\n//         api_key: API_KEY,\n//       },\n//     });\n//     return response.data.cast;\n//   } catch (error) {\n//     console.error('Error fetching movie credits:', error);\n//     throw error;\n//   }\n// };\n\n// export const getMovieReviews = async movieId => {\n//   try {\n//     const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n//       params: {\n//         api_key: API_KEY,\n//       },\n//     });\n//     return response.data.results;\n//   } catch (error) {\n//     console.error('Error fetching movie reviews:', error);\n//     throw error;\n//   }\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MovieList_moviesList__QH0TD\",\"movieItem\":\"MovieList_movieItem__vZLnU\",\"movieLink\":\"MovieList_movieLink__S879-\",\"moviePoster\":\"MovieList_moviePoster__+y5rM\",\"movieInfo\":\"MovieList_movieInfo__0h6ya\",\"movieName\":\"MovieList_movieName__2kQfJ\",\"movieInfoText\":\"MovieList_movieInfoText__e3jFu\",\"movieInfoTextBold\":\"MovieList_movieInfoTextBold__7-F5U\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport css from './MovieList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul className={css.moviesList}>\n      {movies.map(movie => (\n        <li key={movie.id} className={css.movieItem}>\n          <Link to={`/movie/${movie.id}`} className={css.movieLink}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n              className={css.moviePoster}\n            />\n            <div className={css.movieInfo}>\n              <h2 className={css.movieName}>\n                {movie.title} ({getReleaseYear(movie.release_date)})\n              </h2>\n              <p className={css.movieInfoText}>\n                User Score: {getUserScore(movie.vote_average)}\n              </p>\n              <p className={css.movieInfoText}>{movie.overview}</p>\n              {movie.genres && movie.genres.length > 0 && (\n                <p className={css.movieInfoText}>\n                  <span className={css.movieInfoTextBold}>Genres:</span>{' '}\n                  {movie.genres.map(genre => genre.name).join(', ')}\n                </p>\n              )}\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      vote_average: PropTypes.number,\n      overview: PropTypes.string,\n      genres: PropTypes.arrayOf(\n        PropTypes.shape({ name: PropTypes.string.isRequired })\n      ),\n    })\n  ).isRequired,\n};\n\nconst getReleaseYear = releaseDate => {\n  const releaseYear = new Date(releaseDate).getFullYear();\n  return isNaN(releaseYear) ? 'Unknown' : releaseYear;\n};\n\nconst getUserScore = voteAverage => {\n  return voteAverage ? `${(voteAverage * 10).toFixed(0)}%` : 'Not rated yet';\n};\n\nexport default MoviesList;\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import css from './MovieList.module.css';\n// import { Link } from 'react-router-dom';\n\n// const MoviesList = ({ movies }) => {\n//   return (\n//     <ul className={css.moviesList}>\n//       {movies.map(movie => (\n//         <li key={movie.id} className={css.movieItem}>\n//           <Link to={`/movie/${movie.id}`}>\n//             <img\n//               src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n//               alt={movie.title}\n//               className={css.moviePoster}\n//             />\n//           </Link>\n//           <div>\n//             <p className={css.movieTitle}>{movie.title}</p>\n//           </div>\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// };\n\n// MoviesList.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string.isRequired,\n//       poster_path: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n// };\n\n// export default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__bp9RK\",\"searchInput\":\"SearchForm_searchInput__QuPSD\",\"searchButton\":\"SearchForm_searchButton__3wLA+\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './SearchForm.module.css';\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      notifyError('Please enter something');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  const notifyError = message => {\n    NotificationManager.error(message);\n  };\n\n  return (\n    <>\n      <NotificationContainer />\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n          placeholder=\"Search movies\"\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          className={css.searchInput}\n        />\n        <button type=\"submit\" className={css.searchButton}>\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default SearchForm;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { searchMovies } from '../../Api';\nimport MoviesList from '../../MoviesList/MoviesList';\nimport SearchForm from '../../SearchForm/SearchForm';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchResults, setSearchResults] = useState([]);\n  const query = new URLSearchParams(location.search).get('query') || '';\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        if (query) {\n          const results = await searchMovies(query);\n          setSearchResults(results);\n        }\n      } catch (error) {\n        console.error('Error searching movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, [query]);\n\n  const handleSearch = async value => {\n    const results = await searchMovies(value);\n    setSearchResults(results);\n  };\n\n  return (\n    <div>\n      <h2>Search Movies</h2>\n      <SearchForm onSubmit={handleSearch} />\n      <MoviesList movies={searchResults} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","options","method","params","api_key","language","include_adult","headers","accept","Authorization","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","url","concat","axios","sent","abrupt","data","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","getReleaseYear","releaseDate","releaseYear","Date","getFullYear","isNaN","getUserScore","voteAverage","toFixed","movies","_jsx","className","css","children","map","movie","_jsxs","Link","to","id","src","poster_path","alt","title","release_date","vote_average","overview","genres","length","genre","name","join","onSubmit","_useState","useState","_useState2","_slicedToArray","setQuery","notifyError","message","NotificationManager","_Fragment","NotificationContainer","e","preventDefault","placeholder","type","value","onChange","target","location","useLocation","searchResults","setSearchResults","URLSearchParams","search","get","useEffect","fetchMovies","results","handleSearch","SearchForm","MoviesList"],"sourceRoot":""}