{"version":3,"file":"static/js/76.5534524f.chunk.js","mappings":"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","sources":["Api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '432440a0f2101c7e5f5f1625881e4cc7';\nconst BASE_URL = 'https://api.themoviedb.org';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n\n// import axios from 'axios';\n\n// const API_KEY = '432440a0f2101c7e5f5f1625881e4cc7';\n// const BASE_URL = 'https://api.themoviedb.org';\n\n// export const getTrendingMovies = async () => {\n//   try {\n//     const response = await fetch(\n//       `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n//     );\n//     const data = await response.json();\n//     return data.results;\n//   } catch (error) {\n//     console.error('Error fetching trending movies:', error);\n//     throw error;\n//   }\n// };\n\n// export const searchMovies = async query => {\n//   try {\n//     const response = await fetch(\n//       `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n//     );\n//     const data = await response.json();\n//     return data.results;\n//   } catch (error) {\n//     console.error('Error searching movies:', error);\n//     throw error;\n//   }\n// };\n\n// export const getMovieDetails = async movieId => {\n//   try {\n//     const response = await fetch(\n//       `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n//     );\n//     const data = await response.json();\n//     return data;\n//   } catch (error) {\n//     console.error('Error fetching movie details:', error);\n//     throw error;\n//   }\n// };\n\n// export const getMovieCredits = async movieId => {\n//   try {\n//     const response = await fetch(\n//       `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n//     );\n//     const data = await response.json();\n//     return data.cast;\n//   } catch (error) {\n//     console.error('Error fetching movie credits:', error);\n//     throw error;\n//   }\n// };\n\n// export const getMovieReviews = async movieId => {\n//   try {\n//     const response = await fetch(\n//       `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n//     );\n//     const data = await response.json();\n//     return data.results;\n//   } catch (error) {\n//     console.error('Error fetching movie reviews:', error);\n//     throw error;\n//   }\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"castWrapper\":\"Cast_castWrapper__Arm-x\",\"castHeader\":\"Cast_castHeader__81u8W\",\"castList\":\"Cast_castList__ARoWn\",\"castListItem\":\"Cast_castListItem__CF66s\",\"castImage\":\"Cast_castImage__d8bQP\",\"castInfo\":\"Cast_castInfo__fGvyp\",\"castName\":\"Cast_castName__-i08u\",\"noCastText\":\"Cast_noCastText__PaSXg\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../Api';\nimport PropTypes from 'prop-types';\nimport css from './Cast.module.css';\n\nconst Cast = ({ credits }) => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCredits = async () => {\n      try {\n        const movieCredits = await getMovieCredits(movieId);\n        setCast(movieCredits);\n      } catch (error) {\n        console.error('Error fetching movie credits:', error);\n      }\n    };\n\n    fetchCredits();\n  }, [movieId]);\n\n  return (\n    <div className={css.castWrapper}>\n      <h3 className={css.castHeader}>Cast</h3>\n      {cast.length ? (\n        <ul className={css.castList}>\n          {cast.map(actor => (\n            <li className={css.castListItem} key={actor.id}>\n              {actor.profile_path ? (\n                <img\n                  className={css.castImage}\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name} profile`}\n                />\n              ) : (\n                <img\n                  className={css.castImage}\n                  src={`https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png`}\n                  alt={`${actor.name} profile`}\n                />\n              )}\n              <div className={css.castInfo}>\n                <h3 className={css.castName}>{actor.name}</h3>\n                <p>Character: {actor.character}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={css.noCastText}>No cast information available.</p>\n      )}\n    </div>\n  );\n};\n\nCast.propTypes = {\n  credits: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n      character: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default Cast;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","params","api_key","sent","abrupt","data","results","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","credits","useParams","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","fetchCredits","movieCredits","_jsxs","className","css","children","_jsx","length","map","actor","profile_path","src","alt","name","character","id"],"sourceRoot":""}