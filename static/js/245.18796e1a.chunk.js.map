{"version":3,"file":"static/js/245.18796e1a.chunk.js","mappings":"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","sources":["Api.js","webpack://react-homework-template/./src/MoviesList/MovieList.css?2831","MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/SearchForm/SearchForm.css?5733","SearchForm/SearchForm.jsx","components/Movies/Movies.jsx"],"sourcesContent":["const API_KEY = '432440a0f2101c7e5f5f1625881e4cc7';\nconst BASE_URL = 'https://api.themoviedb.org';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.css';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul className={css.moviesList}>\n      {movies.map(movie => (\n        <li key={movie.id} className={css.movieItem}>\n          <Link to={`/movie/${movie.id}`}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n              className={css.moviePoster}\n            />\n          </Link>\n          <div>\n            <p className={css.movieTitle}>{movie.title}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './SearchForm.css';\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      notifyError('Please enter something');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  const notifyError = message => {\n    NotificationManager.error(message);\n  };\n\n  return (\n    <>\n      <NotificationContainer />\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n          placeholder=\"Search movies\"\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          className={css.searchInput}\n        />\n        <button type=\"submit\" className={css.searchButton}>\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","// Movies.jsx\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { searchMovies } from '../../Api';\nimport MoviesList from '../../MoviesList/MoviesList';\nimport SearchForm from '../../SearchForm/SearchForm';\n\nconst Movies = ({ searchQuery, onSearch }) => {\n  const location = useLocation();\n  const [searchResults, setSearchResults] = useState([]);\n  const query =\n    new URLSearchParams(location.search).get('query') || searchQuery;\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        if (query) {\n          const results = await searchMovies(query);\n          setSearchResults(results);\n        }\n      } catch (error) {\n        console.error('Error searching movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, [query]);\n\n  const handleSearch = async value => {\n    onSearch(value);\n  };\n\n  return (\n    <div>\n      <h2>Search Movies</h2>\n      <SearchForm onSubmit={handleSearch} />\n      <MoviesList movies={searchResults} />\n    </div>\n  );\n};\n\nMovies.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","json","abrupt","results","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","movies","_jsx","className","css","children","map","movie","_jsxs","Link","to","id","src","poster_path","alt","title","onSubmit","_useState","useState","_useState2","_slicedToArray","setQuery","notifyError","message","NotificationManager","_Fragment","NotificationContainer","e","preventDefault","placeholder","type","value","onChange","target","searchQuery","onSearch","location","useLocation","searchResults","setSearchResults","URLSearchParams","search","get","useEffect","fetchMovies","handleSearch","SearchForm","MoviesList"],"sourceRoot":""}