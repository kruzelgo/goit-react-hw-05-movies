{"version":3,"file":"static/js/221.1c239d87.chunk.js","mappings":"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","sources":["Api.js","components/Movies.jsx"],"sourcesContent":["const API_KEY = '432440a0f2101c7e5f5f1625881e4cc7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { searchMovies } from '../Api';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = async () => {\n    try {\n      const results = await searchMovies(query);\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Search Movies</h2>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n      <ul>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","json","abrupt","results","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","searchResults","setSearchResults","handleSearch","_jsxs","children","_jsx","type","value","onChange","e","target","onClick","map","movie","Link","to","id","title"],"sourceRoot":""}